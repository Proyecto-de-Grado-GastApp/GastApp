// <auto-generated />
using System;
using GastAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GastAPI.Migrations.CuartaMigracion
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250503014438_4_TablasDependientes")]
    partial class _4_TablasDependientes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GastAPI.Models.EtiquetaGasto", b =>
                {
                    b.Property<long>("EtiquetaId")
                        .HasColumnType("bigint");

                    b.Property<long>("GastoId")
                        .HasColumnType("bigint");

                    b.Property<long>("EtiquetaPersonalizadaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("EtiquetaId", "GastoId");

                    b.HasIndex("EtiquetaPersonalizadaId");

                    b.HasIndex("GastoId");

                    b.ToTable("etiquetas_gasto", (string)null);
                });

            modelBuilder.Entity("GastAPI.Models.HistorialCambio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descripcion_cambio");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("GastoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GastoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("historial_de_cambios", (string)null);
                });

            modelBuilder.Entity("GastAPI.Models.RecordatorioPago", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaRecordatorio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("GastoId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Notificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<long?>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GastoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("recordatorios_de_pago", (string)null);
                });

            modelBuilder.Entity("GastAPI.Models.EtiquetaGasto", b =>
                {
                    b.HasOne("GastAPI.Models.EtiquetaPersonalizada", "EtiquetaPersonalizada")
                        .WithMany("GastosEtiquetados")
                        .HasForeignKey("EtiquetaPersonalizadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GastAPI.Models.Gasto", "Gasto")
                        .WithMany("Etiquetas")
                        .HasForeignKey("GastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EtiquetaPersonalizada");

                    b.Navigation("Gasto");
                });

            modelBuilder.Entity("GastAPI.Models.HistorialCambio", b =>
                {
                    b.HasOne("GastAPI.Models.Gasto", "Gasto")
                        .WithMany("HistorialCambios")
                        .HasForeignKey("GastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GastAPI.Models.Usuario", null)
                        .WithMany("Historiales")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Gasto");
                });

            modelBuilder.Entity("GastAPI.Models.RecordatorioPago", b =>
                {
                    b.HasOne("GastAPI.Models.Gasto", "Gasto")
                        .WithMany("Recordatorios")
                        .HasForeignKey("GastoId");

                    b.HasOne("GastAPI.Models.Usuario", null)
                        .WithMany("Recordatorios")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Gasto");
                });
                
#pragma warning restore 612, 618
        }
    }
}
